variables:
    GIT_DEPTH: 10

build.windows.msvc:
    stage: build
    tags:
        - windows
        - vulkan
        - amd64
    
    # Preparation
    before_script:
        - '[ -e cmdlet.cmd ] && rm cmdlet.cmd'
        - touch cmdlet.cmd
        - chmod +x cmdlet.cmd

        - echo $'cmake --version' >> cmdlet.cmd
        - echo $'cmake -E capabilities' >> cmdlet.cmd

        - cmd //c cmdlet.cmd
    
    # Process
    script:
        # Building

        # CMake - Debug
        - cmake -S . -B build/Debug -A x64 -D CMAKE_BUILD_TYPE=Debug
        - cmake --build build/Debug -t Game --clean-first

        # CMake - Profile
        #- cmake -S . -B build/Profile -A x64 -D CMAKE_BUILD_TYPE=Profile
        #- cmake --build build/Profile -t Game --clean-first

        # CMake - Release
        #- cmake -S . -B build/Release -A x64 -D CMAKE_BUILD_TYPE=Release
        #- cmake --build build/Release -t Game --clean-first

        # Linking Resources

        #- rm -rf dist/Debug/resources
        - cmd //c "IF EXIST .\dist\Debug\resources del /f /q /s .\dist\Debug\resources && rmdir /q /s .\dist\Debug\resources"
        #- rm -rf dist/Profile/resources
        #- cmd //c "IF EXIST .\dist\Profile\resources del /f /q /s .\dist\Profile\resources && rmdir /q /s .\dist\Profile\resources"
        #- rm -rf dist/Release/resources
        #- cmd //c "IF EXIST .\dist\Release\resources del /f /q /s .\dist\Release\resources && rmdir /q /s .\dist\Release\resources"
        #- ln -sfrn resources dist/Debug/resources
        - cmd //c "mklink /j .\dist\Debug\resources .\resources"
        #- ln -sfrn resources dist/Profile/resources
        #- cmd //c "mklink /j .\dist\Profile\resources .\resources"
        #- ln -sfrn resources dist/Release/resources
        #- cmd //c "mklink /j .\dist\Release\resources .\resources"
    
    artifacts:
        name: Ember-Win-MSVC-$CI_COMMIT_REF_NAME
        paths:
            - dist/Debug/
            #- dist/Release/
            #- dist/Profile/
        expire_in: 15min

build.linux.gcc:
    stage: build
    tags:
        - linux
        - gcc11
        - vulkan
        - amd64
    
    # Preparation
    before_script:
        - cmake --version
        - cmake -E capabilities
    
    # Process
    script:
        # Building

        # CMake - Debug
        - cmake -S . -B build/Debug -A x64 -D CMAKE_C_COMPILER=/usr/bin/gcc -D CMAKE_CXX_COMPILER=/usr/bin/g++ -D CMAKE_BUILD_TYPE=Debug
        - cmake --build build/Debug -t Game --clean-first

        # CMake - Profile
        #- cmake -S . -B build/Profile -A x64 -D CMAKE_C_COMPILER=/usr/bin/gcc -D CMAKE_CXX_COMPILER=/usr/bin/g++ -D CMAKE_BUILD_TYPE=Profile
        #- cmake --build build/Profile -t Game --clean-first

        # CMake - Release
        #- cmake -S . -B build/Release -A x64 -D CMAKE_C_COMPILER=/usr/bin/gcc -D CMAKE_CXX_COMPILER=/usr/bin/g++ -D CMAKE_BUILD_TYPE=Release
        #- cmake --build build/Release -t Game --clean-first

        # Linking Resources
    
    artifacts:
        name: Ember-Unix-GCC-$CI_COMMIT_REF_NAME
        paths:
            - dist/Debug/
            #- dist/Release/
            #- dist/Profile/
        expire_in: 15min

build.linux.clang:
    stage: build
    tags:
        - linux
        - clang13
        - vulkan
        - amd64
    
    # Preparation
    before_script:
        - cmake --version
        - cmake -E capabilities
    
    # Process
    script:
        # Building

        # CMake - Debug
        - cmake -S . -B build/Debug -A x64 -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_BUILD_TYPE=Debug
        - cmake --build build/Debug -t Game --clean-first

        # CMake - Profile
        #- cmake -S . -B build/Profile -A x64 -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_BUILD_TYPE=Profile
        #- cmake --build build/Profile -t Game --clean-first

        # CMake - Release
        #- cmake -S . -B build/Release -A x64 -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_BUILD_TYPE=Release
        #- cmake --build build/Release -t Game --clean-first

        # Linking Resources
    
    artifacts:
        name: Ember-Unix-Clang-$CI_COMMIT_REF_NAME
        paths:
            - dist/Debug/
            #- dist/Release/
            #- dist/Profile/
        expire_in: 15min

#test:
#    stage: test
#    script:
#        - echo "Test"

#deploy:
#    stage: deploy
#    script:
#        - echo "Deploy"
